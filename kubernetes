************************  INSTALL STEPS IN UBUNTU *********************************
PRE REQUASITES FOR INSTALL
1: IN AWS MINIMUM 4GB RAM IS REQUARIED WITH 2 CPUS
************************************************************************************



                  **********************************************************************
                  COMMON STEPS FOR INSTALL KUBERNETES IN WORKSTATION AND CLIENT MACHINES
                  ***********************************************************************
sudo -i
apt-get update
apt-get update && sudo apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
apt-get update
apt-get install -y docker.io
apt-get install -y kubelet kubeadm kubectl kubernetes-cni
*******************************************************************************************

                     RUNNING IN WORKSTATION
                     **********************
kubeadm init ______________________>>>>>> IT GIVES TOKEN FOR ADDING CLIENTSFOR KUBERNETES

***************
Your Kubernetes master has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of machines by running the following on each node
as root:

  kubeadm join 172.31.83.219:6443 --token vr9nmz.yucbbaxfcg0kl4ir --discovery-token-ca-cert-hash sha256:5eabb5c8930e7180e7a17d4a15618827fca089d49c26b15be81f4665e77cd93c
********************
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config
kubectl apply -f https://git.io/weave-kube-1.6
kubectl get nodes
kubectl get pods --all-namespaces
kubectl cluster-info
kubectl --help
****************************************************************************************************
                                      ERRORS
                                      ******
1)To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
The connection to the server localhost:8080 was refused - did you specify the ri
2)ip-172-31-83-219   NotReady   master   14m   v1.13.0--------IF WE NOT APPLY kubectl apply -f https://git.io/weave-kube-1.6
ip-172-31-83-219   Ready    master   16m   v1.13.0------------ AFTER APPLY
3)NEED TO NOT ENABLE 6443 PORT
4)NEED TO NOT TAKE 3.75GB ABOVE RAM


